// src/scaffolding/Layout.scss

// Variables
$gutter: 16px;
$breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px
);

// Mixin for responsive breakpoints
@mixin breakpoint($name) {
  @media (min-width: map-get($breakpoints, $name)) {
    @content;
  }
}

// Layout Styles
.layout {
  display: grid;
  grid-template-rows: auto 1fr auto;
  height: 100vh;
  padding: $gutter;
  gap: $gutter;
  overflow: auto;
}

.row {
  display: grid;
  width: 100%;
  gap: $gutter;
  grid-template-columns: repeat(12, 1fr);
}

.col {
  @each $breakpoint, $width in $breakpoints {
    @include breakpoint($breakpoint) {
      &.#{$breakpoint}-1 { grid-column: span 1; }
      &.#{$breakpoint}-2 { grid-column: span 2; }
      &.#{$breakpoint}-3 { grid-column: span 3; }
      &.#{$breakpoint}-4 { grid-column: span 4; }
      &.#{$breakpoint}-5 { grid-column: span 5; }
      &.#{$breakpoint}-6 { grid-column: span 6; }
      &.#{$breakpoint}-7 { grid-column: span 7; }
      &.#{$breakpoint}-8 { grid-column: span 8; }
      &.#{$breakpoint}-9 { grid-column: span 9; }
      &.#{$breakpoint}-10 { grid-column: span 10; }
      &.#{$breakpoint}-11 { grid-column: span 11; }
      &.#{$breakpoint}-12 { grid-column: span 12; }
    }
  }
}

.space {
  display: flex;
  gap: $gutter;

  &.horizontal {
    flex-direction: row;
  }

  &.vertical {
    flex-direction: column;
  }

  &.align-start {
    align-items: flex-start;
  }

  &.align-center {
    align-items: center;
  }

  &.align-end {
    align-items: flex-end;
  }

  &.justify-start {
    justify-content: flex-start;
  }

  &.justify-center {
    justify-content: center;
  }

  &.justify-end {
    justify-content: flex-end;
  }

  &.justify-between {
    justify-content: space-between;
  }

  &.justify-around {
    justify-content: space-around;
  }

  &.justify-evenly {
    justify-content: space-evenly;
  }

  &.size-small {
    gap: $gutter / 2;
  }

  &.size-medium {
    gap: $gutter;
  }

  &.size-large {
    gap: $gutter * 2;
  }
}

.card {
  padding: $gutter;
  border: 1px solid #ddd;
  border-radius: 4px;
  background-color: #fff;
}

.text {
  &.muted {
    color: #999;
  }
  &.small {
    font-size: 0.875rem;
  }
  &.medium {
    font-size: 1rem;
  }
  &.large {
    font-size: 1.25rem;
  }
}

.link {
  color: #007bff;
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  border-radius: 4px;
  cursor: pointer;
  &.primary {
    background-color: #007bff;
    color: #fff;
    border: 1px solid transparent;
  }
  &.default {
    background-color: #f8f9fa;
    color: #212529;
    border: 1px solid #ced4da;
  }
  &.ghost {
    background-color: transparent;
    color: #007bff;
    border: 1px solid #007bff;
  }
  &.danger {
    background-color: #dc3545;
    color: #fff;
    border: 1px solid transparent;
  }
  &.warning {
    background-color: #ffc107;
    color: #212529;
    border: 1px solid transparent;
  }
  &.disabled {
    background-color: #e9ecef;
    color: #6c757d;
    border: 1px solid transparent;
    cursor: not-allowed;
  }
  &.link {
    background-color: transparent;
    color: #007bff;
    border: none;
  }
  .icon {
    margin-right: 0.5rem;
  }
}

.input-wrapper {
  position: relative;
  .input {
    width: 100%;
    padding: 0.375rem 0.75rem;
    border: 1px solid #ced4da;
    border-radius: 4px;
    &.grow {
      flex-grow: 1;
    }
    &.error {
      border-color: #dc3545;
    }
  }
  .notification {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #dc3545;
  }
}
